{"version":3,"sources":["webpack:///./src/views/internships/Form.vue?b6c3","webpack:///src/views/internships/Form.vue","webpack:///./src/views/internships/Form.vue?1a5c","webpack:///./src/views/internships/Form.vue","webpack:///./src/models/Internship.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_l","internshipObject","fieldsSettings","settings","key","isVisible","type","attrs","_e","hasErrors","errorText","$t","model","value","callback","$$v","selectedCompetences","expression","studyCompetences","item","id","name","on","submit","_v","_s","staticRenderFns","components","VTextBox","VSelectBox","quillEditor","props","internship","Object","default","Number","String","data","StudyCompetence","studyPrograms","StudyProgram","methods","getStudyCompetencesFromStudyProgram","studyProgram","studyModules","competence","studyModule","showOnUpdate","showOnCreate","studyCompetence","filter","action","component","Internship","organization","StudyCompetenceCollection","identifier","useFirstErrorOnly","label","showInList","showInView","pinned","width","values","EnterpriseCollection","StudyProgramCollection","multiple","required","fetch","save","patch","delete","apply","config","url","method","createRequest","send","BaseModel","InternshipCollection","orderBy","fetchForStudyProgram","studyProgramId","then","response","replace","catch","error","BaseCollection"],"mappings":"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","file":"js/chunk-09bce843.f0323053.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vx-row\"},[_c('div',{staticClass:\"vx-col md:w-1/3 w-full mb-base\"},[_c('vx-card',[_vm._l((_vm.internshipObject.fieldsSettings()),function(settings,key){return [(_vm.isVisible(settings))?[(settings.type === 'select')?_c('v-select-box',{key:key,attrs:{\"settings\":settings,\"object\":_vm.internshipObject,\"field\":key}}):(settings.type === 'form')?_c('v-select-box',{key:key,attrs:{\"settings\":settings,\"object\":_vm.internshipObject,\"field\":key}}):_c('v-text-box',{key:key,attrs:{\"object\":_vm.internshipObject,\"field\":key}})]:_vm._e()]}),_c('div',{staticClass:\"vx-row mb-6\"},[_c('div',{staticClass:\"vx-col  w-full\"},[_c('vs-select',{staticClass:\"w-full\",attrs:{\"danger\":_vm.hasErrors(_vm.internshipObject, 'studyCompetence'),\"danger-text\":_vm.errorText(_vm.internshipObject, 'studyCompetence'),\"label\":_vm.$t('STUDY_COMPETENCES.TITLE'),\"multiple\":true,\"autocomplete\":\"\"},model:{value:(_vm.selectedCompetences),callback:function ($$v) {_vm.selectedCompetences=$$v},expression:\"selectedCompetences\"}},_vm._l((_vm.studyCompetences.models),function(item){return _c('vs-select-item',{key:item.id,attrs:{\"value\":item.id,\"text\":item.name}})}),1)],1)])],2)],1),_c('div',{staticClass:\"vx-col w-full mb-base\"},[_c('div',{staticClass:\"vx-col w-full ml-auto\"},[_c('vs-button',{staticClass:\"mr-3 mb-2\",on:{\"click\":_vm.submit}},[_vm._v(_vm._s(_vm.$t('GLOBALS.SUBMIT')))])],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"vx-row\">\r\n    <div class=\"vx-col md:w-1/3 w-full mb-base\">\r\n      <vx-card>\r\n        <template v-for=\"(settings, key) in internshipObject.fieldsSettings()\">\r\n          <template v-if=\"isVisible(settings)\">\r\n            <v-select-box\r\n              v-if=\"settings.type === 'select'\"\r\n              :key=\"key\"\r\n              :settings=\"settings\"\r\n              :object=\"internshipObject\"\r\n              :field=\"key\"\r\n            />\r\n            <v-select-box\r\n              v-else-if=\"settings.type === 'form'\"\r\n              :key=\"key\"\r\n              :settings=\"settings\"\r\n              :object=\"internshipObject\"\r\n              :field=\"key\"\r\n            />\r\n            <v-text-box\r\n              v-else\r\n              :key=\"key\"\r\n              :object=\"internshipObject\"\r\n              :field=\"key\"\r\n            />\r\n          </template>\r\n        </template>\r\n        <div class=\"vx-row mb-6\">\r\n          <div class=\"vx-col  w-full\">\r\n            <vs-select\r\n              v-model=\"selectedCompetences\"\r\n              :danger=\"hasErrors(internshipObject, 'studyCompetence')\"\r\n              :danger-text=\"errorText(internshipObject, 'studyCompetence')\"\r\n              :label=\"$t('STUDY_COMPETENCES.TITLE')\"\r\n              :multiple=\"true\"\r\n              class=\"w-full\"\r\n              autocomplete\r\n            >\r\n              <vs-select-item\r\n                v-for=\"item in studyCompetences.models\"\r\n                :key=\"item.id\"\r\n                :value=\"item.id\"\r\n                :text=\"item.name\"\r\n              />\r\n            </vs-select>\r\n          </div>\r\n        </div>\r\n      </vx-card>\r\n    </div>\r\n\r\n    <div class=\"vx-col w-full mb-base\">\r\n      <div class=\"vx-col w-full ml-auto\">\r\n        <vs-button class=\"mr-3 mb-2\" @click=\"submit\">{{\r\n          $t('GLOBALS.SUBMIT')\r\n        }}</vs-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Internship, InternshipCollection } from '../../models/Internship'\r\nimport VTextBox from '../../components/form/VTextBox'\r\nimport VSelectBox from '../../components/form/VSelectBox'\r\nimport {\r\n  StudyCompetence,\r\n  StudyCompetenceCollection\r\n} from '../../models/StudyCompetence'\r\nimport 'quill/dist/quill.core.css'\r\nimport 'quill/dist/quill.snow.css'\r\nimport 'quill/dist/quill.bubble.css'\r\n\r\nimport { quillEditor } from 'vue-quill-editor'\r\nimport { StudyProgramCollection } from '../../models/StudyProgram'\r\n\r\nexport default {\r\n  components: {\r\n    VTextBox,\r\n    VSelectBox,\r\n    quillEditor\r\n  },\r\n\r\n  props: {\r\n    internship: {\r\n      type: Object,\r\n      default: () => new Internship()\r\n    },\r\n\r\n    id: {\r\n      type: [Number, String],\r\n      default: () => null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      internshipObject: this.internship,\r\n      studyCompetences: new StudyCompetenceCollection(),\r\n      selectedCompetences: [],\r\n      studyPrograms: new StudyProgramCollection()\r\n    }\r\n  },\r\n\r\n  async mounted() {\r\n    if (!this.internshipObject.id && this.id) {\r\n      let internships = new InternshipCollection()\r\n      await internships.fetch()\r\n      this.internshipObject = internships.find(\r\n        internship => internship.id === parseInt(this.id)\r\n      )\r\n    }\r\n    if (this.internshipObject.studyProgram) {\r\n      this.studyCompetences = this.getStudyCompetencesFromStudyProgram(\r\n        this.internshipObject.studyProgram\r\n      )\r\n    }\r\n\r\n    this.internshipObject.on('change', event => {\r\n      if (\r\n        event.attribute === 'studyProgram' &&\r\n        this.internshipObject.studyProgram\r\n      ) {\r\n        this.studyCompetences = this.getStudyCompetencesFromStudyProgram(\r\n          this.internshipObject.studyProgram\r\n        )\r\n      }\r\n    })\r\n\r\n    this.selectedCompetences = this.internshipObject.studyCompetence.map(\r\n      competence => competence.id\r\n    )\r\n  },\r\n  methods: {\r\n    getStudyCompetencesFromStudyProgram(studyProgram) {\r\n      let competences = studyProgram.studyCompetences\r\n      if (studyProgram.studyModules) {\r\n        for (let studyModule of studyProgram.studyModules) {\r\n          competences = competences.concat(\r\n            studyModule.studyCompetences.map(competence => {\r\n              competence.name = studyModule.name + ' - ' + competence.name\r\n              return competence\r\n            })\r\n          )\r\n        }\r\n      }\r\n\r\n      return new StudyCompetenceCollection(competences)\r\n    },\r\n    isVisible(settings) {\r\n      if (this.internshipObject.id) {\r\n        return settings.showOnUpdate\r\n      }\r\n      return settings.showOnCreate\r\n    },\r\n\r\n    submit() {\r\n      this.internship.studyCompetence = this.studyCompetences.filter(\r\n        competence => this.selectedCompetences.includes(competence.id)\r\n      )\r\n      let action = 'save'\r\n      if (this.internshipObject.id) {\r\n        action = 'patch'\r\n      }\r\n\r\n      this.internshipObject[action]()\r\n        .then(() => {\r\n          this.$router.push({ name: 'internships' })\r\n          this.$vs.notify({\r\n            color: 'success',\r\n            title: this.$t('GLOBALS.RECORD_CREATED'),\r\n            text: this.$t('GLOBALS.RECORD_SUCCESSFULLY_CREATED')\r\n          })\r\n        })\r\n        .catch(error => {\r\n          this.showValidationErrors(this.internshipObject)\r\n          this.$vs.notify({\r\n            color: 'danger',\r\n            title: this.$t('GLOBALS.ERROR_ON_SAVE'),\r\n            text: error.message\r\n          })\r\n        })\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Form.vue?vue&type=template&id=1f2f3967&\"\nimport script from \"./Form.vue?vue&type=script&lang=js&\"\nexport * from \"./Form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import BaseModel from './BaseModel'\nimport BaseCollection from './BaseCollection'\n\nimport { required } from 'vue-mc/validation'\nimport { StudyCompetenceCollection } from './StudyCompetence'\nimport { StudyProgramCollection } from './StudyProgram'\nimport { SchoolCollection } from './School'\nimport { EnterpriseCollection } from './Enterprise'\n\nexport class Internship extends BaseModel {\n  // Default attributes that define the \"empty\" state.\n  defaults() {\n    return {\n      id: null,\n      organization: null,\n      studyProgram: null,\n      studyCompetence: new StudyCompetenceCollection()\n    }\n  }\n\n  options() {\n    return {\n      identifier: 'id',\n      useFirstErrorOnly: true\n    }\n  }\n\n  displayField() {\n    return 'id'\n  }\n\n  // Attribute mutations.\n  mutations() {\n    return {\n      // organization: (id) => { return { \"id\": id }},\n      // studyProgram: (id) => { return { \"id\": id }},\n    }\n  }\n\n  //\n  fieldsSettings() {\n    return {\n      id: {\n        label: 'GLOBALS.ID',\n        type: 'text',\n        showInList: true,\n        showInView: false,\n        showOnCreate: false,\n        showOnUpdate: false,\n        pinned: 'left',\n        width: 100\n      },\n      organization: {\n        label: 'ORGANIZATIONS.TITLE_SINGLE',\n        type: 'select',\n        showInList: true,\n        showInView: true,\n        showOnCreate: true,\n        showOnUpdate: true,\n        values: new EnterpriseCollection()\n      },\n      studyProgram: {\n        label: 'STUDY_PROGRAMS.TITLE',\n        type: 'select',\n        showInList: true,\n        showInView: true,\n        showOnCreate: true,\n        showOnUpdate: true,\n        values: new StudyProgramCollection()\n      },\n      studyCompetence: {\n        label: 'COMPETENCES.TITLE',\n        type: 'select',\n        showInList: false,\n        showInView: true,\n        showOnCreate: false,\n        showOnUpdate: false,\n        multiple: true,\n        values: new StudyCompetenceCollection()\n      }\n    }\n  }\n  // Attribute validation\n  validation() {\n    return {\n      organization: required,\n      studyProgram: required\n    }\n  }\n\n  // Route configuration\n  routes() {\n    return {\n      fetch: '/editInternship/{id}',\n      save: '/createInternship',\n      patch: '/editInternship',\n      delete: '/deleteInternship/{id}',\n      apply: '/applyForInternship'\n    }\n  }\n\n  apply() {\n    let config = {\n      url: '/applyForInternship/' + this.id,\n      method: 'GET'\n      // data\n      // params\n      // headers\n    }\n\n    return this.createRequest(config).send()\n  }\n}\n\nexport class InternshipCollection extends BaseCollection {\n  // Model that is contained in this collection.\n  model() {\n    return Internship\n  }\n\n  // Default attributes\n  defaults() {\n    return {\n      orderBy: 'id'\n    }\n  }\n\n  // Route configuration\n  routes() {\n    return {\n      fetch: '/listInternships',\n      fetchForStudyProgram: '/listInternships/{study_program_id}'\n    }\n  }\n\n  fetchForStudyProgram(studyProgramId) {\n    let config = {\n      url: '/listInternships/' + studyProgramId,\n      method: 'GET'\n      // data\n      // params\n      // headers\n    }\n\n    return this.createRequest(config)\n      .send()\n      .then(response => {\n        this.replace(response.response.data)\n      })\n      .catch(error => {\n        // Handle failure here\n      })\n  }\n}\n"],"sourceRoot":""}